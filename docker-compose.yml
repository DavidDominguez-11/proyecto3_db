
services:
  db:
    image: postgres:15-alpine
    container_name: p3postgresdb
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: p3db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Backend/db/init.sql:/docker-entrypoint-initdb.d/1_init.sql
      - ./Backend/db/datos.sql:/docker-entrypoint-initdb.d/2_datos.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d p3db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Backend   # <-- El contexto es el directorio Backend/
      dockerfile: Dockerfile
    container_name: backend
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: dbuser
      DB_PASSWORD: dbpassword
      DB_NAME: p3db
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build: ./Fronted
    container_name: frontend
    ports:
      - "8000:8000"
    volumes:
      - ./Fronted:/app  # Montar cÃ³digo fuente para desarrollo
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge